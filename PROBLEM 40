Table: Prices
Column Name Type
product_id int
start_date date
end_date date
price int
(product_id, start_date, end_date) is the primary key for this table.
Each row of this table indicates the price of the product_id in the period from start_date to end_date.
For each product_id there will be no two overlapping periods. That means there will be no two
intersecting periods for the same product_id.
Table: UnitsSold
Column Name Type
product_id int
purchase_date date
units int
There is no primary key for this table, it may contain duplicates.
Each row of this table indicates the date, units, and product_id of each product sold.
Write an SQL query to find the average selling price for each product. average_price should be
rounded to 2 decimal places.
Return the result table in any order.
The query result format is in the following example.
Input:
Prices table:
product_id start_date end_date price
1 2019-02-17 2019-02-28 5
1 2019-03-01 2019-03-22 20
2 2019-02-01 2019-02-20 15
2 2019-02-21 2019-03-31 30
UnitsSold table:
product_id purchase_date units
1 2019-02-25 100
1 2019-03-01 15
2 2019-02-10 200
2 2019-03-22 30


WITH JOINCTE AS(
  SELECT P.PRODUCT_ID,
          P.START_DATE,
          P.END_DATE,
          P.PRICE,
          U.PURCHASE_DATE,
          U.UNITS
FROM PRICES P
JOIN UNITSSOLD U ON P.PRODUCT_ID = U.PRODUCT_ID
WHERE U.PURCHASE_DATE >= P.START_DATE AND U.PURCHASE_DATE<=P.END_DATE
GROUP BY PRODUCT_ID
),
WEIGTHEDAVERAGE AS(
  SELECT PRODUCT_ID,
          PRICE,
          UNITS,
          (PRICE*UNITS) AS TOTAL_AMOUNT
FROM JOINCTE
) 

SELECT PRODUCT_ID,
       ROUND(SUM(TOTAL_AMOUNT) / SUM(units), 2) AS average_price
FROM WEIGHTEDAVERAGE
ORDER BY PRODUCT_ID;


------ANOTHER APPROACH------

WITH JoinedData AS (
    SELECT
        U.product_id,
        U.purchase_date,
        P.price,
        U.units
    FROM UnitsSold U
    JOIN Prices P ON U.product_id = P.product_id
        AND U.purchase_date BETWEEN P.start_date AND P.end_date
)

SELECT
    product_id,
    ROUND(SUM(price * units) / SUM(units), 2) AS average_price
FROM JoinedData
GROUP BY product_id;
