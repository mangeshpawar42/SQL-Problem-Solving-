Table: Countries
Column Name Type
country_id int
country_name varchar
country_id is the primary key for this table.
Each row of this table contains the ID and the name of one country.
Table: Weather
Column Name Type
country_id int
weather_state int
day date
(country_id, day) is the primary key for this table.
Each row of this table indicates the weather state in a country for one day.
Write an SQL query to find the type of weather in each country for November 2019.
The type of weather is:
● Cold if the average weather_state is less than or equal 15,
● Hot if the average weather_state is greater than or equal to 25, and
● Warm otherwise.
Return result table in any order.
The query result format is in the following example.
Input:
Countries table:
country_id country_name
2 USA
3 Australia
7 Peru
5 China
8 Morocco
9 Spain
Weather table:
country_id weather_state day
2 15 2019-11-01
2 12 2019-10-28
2 12 2019-10-27
3 -2 2019-11-10
3 0 2019-11-11
3 3 2019-11-12
5 16 2019-11-07
5 18 2019-11-09
5 21 2019-11-23
7 25 2019-11-28
7 22 2019-12-01
7 20 2019-12-02
8 25 2019-11-05
8 27 2019-11-15
8 31 2019-11-25
9 7 2019-10-23
9 3 2019-12-23


WITH AVGWEATHER AS(
    SELECT 
    W.COUNTRY_ID,
    COUNTRY_NAME,
    AVG(WEATHER_STATE) AS AVERAGE_WEATHER
    FROM WEATHER W
    JOIN COUNTRIES C ON W.COUNTRY_ID = C.COUNTRY_ID
    WHERE EXTRACT(MONTH FROM DAY) = 11 AND EXTRACT(YEAR FROM DAY) = 2019
    GROUP BY W.COUNTRY_ID, COUNTRY_NAME
) A

SELECT A.COUNTRY_NAME,
        CASE 
            WHEN AVERAGE_WEATHER <= 15 THEN 'COLD'
            WHEN AVERAGE_WEATHER >= 25 THEN 'HOT'
            ELSE 'WARM' 
            END AS WEATHER_TYPE
FROM AVGWEATHER;


-----------------ANOTHER APPROACH---------------

-- Calculate the average weather state for each country in November 2019 and categorize the weather types
SELECT
    COUNTRY_ID,
    COUNTRY_NAME,
    CASE
        WHEN AVERAGE_WEATHER <= 15 THEN 'COLD'
        WHEN AVERAGE_WEATHER >= 25 THEN 'HOT'
        ELSE 'WARM'
    END AS WEATHER_TYPE
FROM (
    SELECT
        C.COUNTRY_ID,
        C.COUNTRY_NAME,
        AVG(W.WEATHER_STATE) AS AVERAGE_WEATHER
    FROM COUNTRIES C
    JOIN WEATHER W ON C.COUNTRY_ID = W.COUNTRY_ID
    WHERE EXTRACT(MONTH FROM W.DAY) = 11 AND EXTRACT(YEAR FROM W.DAY) = 2019
    GROUP BY C.COUNTRY_ID, C.COUNTRY_NAME
) AVGWEATHER;

        
