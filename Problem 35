Table: Movies
Column Name Type
movie_id int
title varchar
movie_id is the primary key for this table.
The title is the name of the movie.
Table: Users
Column Name Type
user_id int
name varchar
user_id is the primary key for this table.
Table: MovieRating
Column Name Type
movie_id int
user_id int
rating int
created_at date
(movie_id, user_id) is the primary key for this table.
This table contains the rating of a movie by a user in their review.
created_at is the user's review date.
Write an SQL query to:
● Find the name of the user who has rated the greatest number of movies. In case of a tie,
return the lexicographically smaller user name.
● Find the movie name with the highest average rating in February 2020. In case of a tie, return
the lexicographically smaller movie name.
The query result format is in the following example.
Input:
Movies table:
movie_id title
1 Avengers
2 Frozen 2
3 Joker
Users table:
user_id name
1 Daniel
2 Monica
3 Maria
4 James
MovieRating table:
movie_id user_id rating created_at
1 1 3 2020-01-12
1 2 4 2020-02-11
1 3 2 2020-02-12
1 4 1 2020-01-01
2 1 5 2020-02-17
2 2 2 2020-02-01
2 3 2 2020-03-01
3 1 3 2020-02-22
3 2 4 2020-02-25


WITH UserMovieCounts AS (
    SELECT U.name AS user_name, COUNT(MR.movie_id) AS movie_count
    FROM Users U
    LEFT JOIN MovieRating MR ON U.user_id = MR.user_id
    GROUP BY U.name
),
MovieAverageRatings AS (
    SELECT M.title AS movie_title, AVG(MR.rating) AS avg_rating
    FROM Movies M
    JOIN MovieRating MR ON M.movie_id = MR.movie_id
    WHERE MR.created_at >= '2020-02-01' AND MR.created_at <= '2020-02-29'
    GROUP BY M.title
)
SELECT user_name
FROM UserMovieCounts
WHERE movie_count = (SELECT MAX(movie_count) FROM UserMovieCounts)
ORDER BY user_name
LIMIT 1;

SELECT movie_title
FROM MovieAverageRatings
WHERE avg_rating = (SELECT MAX(avg_rating) FROM MovieAverageRatings)
ORDER BY movie_title
LIMIT 1;

-----------------ANOTHER APPROACH---------------

WITH CTE AS (
SELECT  M.*,
        U.*,
        MR.*
        COUNT(M.MOVIE_ID) AS TOTAL_RATING,
        AVG(MR.RATING) AS AVERAGE_RATING
FROM MOVIES M 
JOIN MOVIERATING MR ON M.MOVIE_ID = MR.MOVIE_ID
JOIN USERS U ON MR.USER_ID = U.USER_ID
GROUP BY U.USER_ID, M.MOVIE_ID
)
SELECT NAME 
FROM CTE 
WHERE TOTAL_RATING = (SELECT MAX(TOTAL_RATING) FROM CTE)
ORDER BY NAME
LIMIT 1;

SELECT TITLE
FROM CTE
WHERE (MR.CREATED_AT>='2020-02-01' AND MR.CREATED_AT<='2020-02-29')
AND AVERAGE_RATING = (SELECT MAX(AVERAGE_RATING) FROM CTE)
ORDER BY TITLE
LIMIT 1;




















